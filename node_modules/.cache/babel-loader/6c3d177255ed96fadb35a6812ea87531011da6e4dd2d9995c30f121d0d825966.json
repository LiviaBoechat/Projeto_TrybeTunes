{"ast":null,"code":"var _jsxFileName = \"/home/livia/Documentos/projetos/portifolio/Projeto_TrybeTunes/src/pages/Album.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { addSong, getFavoriteSongs, removeSong } from '../services/favoriteSongsAPI';\nimport MusicCard from './MusicCard';\nimport getMusics from '../services/musicsAPI';\nimport Header from '../Header';\nimport '../album.css';\n\n// import { Redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Album extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      songList: [],\n      artistName: '',\n      collectionName: '',\n      collectionImage: [],\n      loading: false,\n      idFavorites: []\n    };\n    this.recoverFavorites = async () => {\n      const getfavorites = await getFavoriteSongs();\n      console.log(getfavorites);\n      const arrayId = getfavorites.reduce((acc, curr) => {\n        acc.push(curr.trackId);\n        return acc;\n      }, []);\n      this.setState({\n        idFavorites: arrayId\n      });\n    };\n    this.handleChange = async song => {\n      const {\n        idFavorites\n      } = this.state;\n      this.setState({\n        loading: true\n      });\n      if (!idFavorites.includes(song.trackId)) {\n        await addSong(song);\n      } else {\n        await removeSong(song);\n      }\n      this.setState({\n        loading: false\n      });\n      this.recoverFavorites();\n    };\n    this.getMusics = async () => {\n      const {\n        match: {\n          params: {\n            id\n          }\n        }\n      } = this.props;\n      const music = await getMusics(id);\n      // console.log(musics);\n\n      this.setState({\n        songList: music,\n        artistName: music[0].artistName,\n        collectionName: music[0].collectionName,\n        collectionImage: music[0].artworkUrl100\n      });\n    };\n  }\n  async componentDidMount() {\n    this.getMusics();\n    this.recoverFavorites();\n    // console.log('teste');\n  }\n\n  render() {\n    const {\n      songList,\n      artistName,\n      collectionName,\n      loading,\n      idFavorites,\n      collectionImage\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-testid\": \"page-album\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"loading\",\n        children: \"Carregando...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"album-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"album-info-ball\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"album-image-container\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"album-image\",\n              src: collectionImage,\n              alt: \"album\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"album-name-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n              children: \"\\xC1lbum\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              \"data-testid\": \"album-name\",\n              children: collectionName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              \"data-testid\": \"artist-name\",\n              children: artistName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"songs-list-container\",\n          children: songList.map((eachMusic, index) => {\n            if (index === 0) {\n              return undefined;\n            }\n            return /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: /*#__PURE__*/_jsxDEV(\"li\", {\n                children: /*#__PURE__*/_jsxDEV(MusicCard, {\n                  index: index,\n                  song: eachMusic,\n                  handleChange: this.handleChange,\n                  checkedBox: idFavorites.includes(eachMusic.trackId)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 21\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Album;\nAlbum.propTypes = {\n  searchSongListMusic: PropTypes.string,\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string\n    })\n  })\n}.isRequired;","map":{"version":3,"names":["React","Component","PropTypes","addSong","getFavoriteSongs","removeSong","MusicCard","getMusics","Header","Album","state","songList","artistName","collectionName","collectionImage","loading","idFavorites","recoverFavorites","getfavorites","console","log","arrayId","reduce","acc","curr","push","trackId","setState","handleChange","song","includes","match","params","id","props","music","artworkUrl100","componentDidMount","render","map","eachMusic","index","undefined","propTypes","searchSongListMusic","string","shape","isRequired"],"sources":["/home/livia/Documentos/projetos/portifolio/Projeto_TrybeTunes/src/pages/Album.js"],"sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { addSong, getFavoriteSongs, removeSong } from '../services/favoriteSongsAPI';\nimport MusicCard from './MusicCard';\nimport getMusics from '../services/musicsAPI';\nimport Header from '../Header';\nimport '../album.css';\n\n// import { Redirect } from 'react-router-dom';\n\nclass Album extends Component {\n  state = {\n    songList: [],\n    artistName: '',\n    collectionName: '',\n    collectionImage: [],\n    loading: false,\n    idFavorites: [],\n  };\n\n  async componentDidMount() {\n    this.getMusics();\n    this.recoverFavorites();\n    // console.log('teste');\n  }\n\n  recoverFavorites = async () => {\n    const getfavorites = await getFavoriteSongs();\n    console.log(getfavorites);\n    const arrayId = getfavorites.reduce(((acc, curr) => {\n      acc.push(curr.trackId);\n      return acc;\n    }), []);\n    this.setState({\n      idFavorites: arrayId,\n    });\n  };\n\n  handleChange = async (song) => {\n    const { idFavorites } = this.state;\n\n    this.setState(({\n      loading: true,\n    }));\n\n    if (!idFavorites.includes(song.trackId)) {\n      await addSong(song);\n    } else {\n      await removeSong(song);\n    }\n    this.setState(({\n      loading: false,\n    }));\n\n    this.recoverFavorites();\n  };\n\n  getMusics = async () => {\n    const { match: { params: { id } } } = this.props;\n\n    const music = await getMusics(id);\n    // console.log(musics);\n\n    this.setState(({\n      songList: music,\n      artistName: music[0].artistName,\n      collectionName: music[0].collectionName,\n      collectionImage: music[0].artworkUrl100,\n    }));\n  };\n\n  render() {\n    const { songList, artistName,\n      collectionName, loading, idFavorites, collectionImage } = this.state;\n\n    return (\n      <div data-testid=\"page-album\">\n        <Header />\n        { loading ? <h1 className=\"loading\">Carregando...</h1> : (\n          <div className=\"album-container\">\n            <div className=\"album-info-ball\">\n              <div className=\"album-image-container\">\n                <img\n                  className=\"album-image\"\n                  src={ collectionImage }\n                  alt=\"album\"\n                />\n              </div>\n              <div className=\"album-name-container\">\n                <h6>√Ålbum</h6>\n                <h4 data-testid=\"album-name\">{ collectionName }</h4>\n                <h5 data-testid=\"artist-name\">{ artistName }</h5>\n              </div>\n\n            </div>\n            <div className=\"songs-list-container\">\n              {songList.map((eachMusic, index) => {\n                if (index === 0) {\n                  return undefined;\n                }\n                return (\n                  <ul key={ index }>\n                    <li>\n                      <MusicCard\n                        index={ index }\n                        song={ eachMusic }\n                        handleChange={ this.handleChange }\n                        checkedBox={ idFavorites.includes(eachMusic.trackId) }\n                      />\n                    </li>\n                  </ul>\n                );\n              })}\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Album;\n\nAlbum.propTypes = {\n  searchSongListMusic: PropTypes.string,\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }),\n}.isRequired;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}